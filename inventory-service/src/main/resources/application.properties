spring.application.name=inventory-service
server.port=8082

spring.datasource.url=jdbc:postgresql://postgres:5432/inventory
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=create

springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

#Kafka properties
#Consumer
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=inventory-service-group-id

#Producer
spring.kafka.producer.retries=10
#interval between retries
spring.kafka.retry.topic.delay=1s
#Acks configuration - "all" ensures the producer waits for all replicas to acknowledge
spring.kafka.producer.acks=all
#maximum time producer will wait for entire send operation to complete (send, wait for ack, retries)
spring.kafka.producer.properties.delivery.timeout.ms=120000
#time producer will wait before sending event
spring.kafka.producer.properties.linger.ms=0
#maximum time producer will wait after sending single request
spring.kafka.producer.properties.request.timeout.ms=30000
#maximum number of unacknowledged requests (messages) that can be sent over a single connection before receiving responses
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

#Actuator
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=product-service
management.tracing.sampling.probability=1.0

#Loji
loki.url=http://loki:3100/loki/api/v1/push

#Redis
spring.data.redis.host=redis
spring.data.redis.port=6379