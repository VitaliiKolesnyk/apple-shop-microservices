spring.application.name=notification-service
server.port=8083

spring.datasource.url=jdbc:postgresql://postgres:5432/email
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update

# Mail Properties
spring.mail.host=email-smtp.eu-north-1.amazonaws.com
spring.mail.port=2587
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.auth=false
spring.mail.properties.mail.smtp.starttls.enable=false

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-service-group

spring.kafka.producer.retries=10
#interval between retries
spring.kafka.retry.topic.delay=1s
#Acks configuration - "all" ensures the producer waits for all replicas to acknowledge
spring.kafka.producer.acks=all

#maximum time producer will wait for entire send operation to complete (send, wait for ack, retries)
spring.kafka.producer.properties.delivery.timeout.ms=120000
#time producer will wait before sending event
spring.kafka.producer.properties.linger.ms=0
#maximum time producer will wait after sending single request
spring.kafka.producer.properties.request.timeout.ms=30000
#maximum number of unacknowledged requests (messages) that can be sent over a single connection before receiving responses
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

#Actuator
management.endpoints.web.exposure.include=health, info, metrics, prometheus
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=notification-service
management.endpoints.web.base-path=/notification-service

admin.user.email=vkolesnyk100@gmail.com
email.from=vkolesnyk100@gmail.com

loki.url=http://loki:3100/loki/api/v1/push

springdoc.api-docs.path=/api-docs
