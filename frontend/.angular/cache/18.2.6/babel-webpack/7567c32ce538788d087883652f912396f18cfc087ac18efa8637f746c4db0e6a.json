{"ast":null,"code":"import { FormsModule } from '@angular/forms'; // Import FormsModule\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/inventory.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction InventoryComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\")(2, \"strong\", 8);\n    i0.ɵɵtext(3, \"Success!\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 9);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function InventoryComponent_div_4_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.successMessage = \"\");\n    });\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(7, \"svg\", 11)(8, \"title\");\n    i0.ɵɵtext(9, \"Close\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"path\", 12);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r1.successMessage);\n  }\n}\nfunction InventoryComponent_table_6_tr_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 18)(1, \"td\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 20)(4, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function InventoryComponent_table_6_tr_11_Template_input_ngModelChange_4_listener($event) {\n      const inventory_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      i0.ɵɵtwoWayBindingSet(inventory_r4.quantity, $event) || (inventory_r4.quantity = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"td\", 20)(6, \"input\", 22);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function InventoryComponent_table_6_tr_11_Template_input_ngModelChange_6_listener($event) {\n      const inventory_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      i0.ɵɵtwoWayBindingSet(inventory_r4.limit, $event) || (inventory_r4.limit = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\", 23)(8, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function InventoryComponent_table_6_tr_11_Template_button_click_8_listener() {\n      const inventory_r4 = i0.ɵɵrestoreView(_r3).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.updateInventory(inventory_r4));\n    });\n    i0.ɵɵtext(9, \" Update \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const inventory_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(inventory_r4.skuCode);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", inventory_r4.quantity);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", inventory_r4.limit);\n  }\n}\nfunction InventoryComponent_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 13)(1, \"thead\", 14)(2, \"tr\", 15)(3, \"th\", 16);\n    i0.ɵɵtext(4, \"SKU Code\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\", 16);\n    i0.ɵɵtext(6, \"Quantity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 16);\n    i0.ɵɵtext(8, \"Limit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"th\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"tbody\");\n    i0.ɵɵtemplate(11, InventoryComponent_table_6_tr_11_Template, 10, 3, \"tr\", 17);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.inventories);\n  }\n}\nfunction InventoryComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 25);\n    i0.ɵɵtext(1, \" No inventories available. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let InventoryComponent = /*#__PURE__*/(() => {\n  class InventoryComponent {\n    inventoryService;\n    inventories = [];\n    successMessage = ''; // To display a success message\n    constructor(inventoryService) {\n      this.inventoryService = inventoryService;\n    }\n    ngOnInit() {\n      this.loadInventories();\n    }\n    loadInventories() {\n      this.inventoryService.getAllInventories().subscribe(data => {\n        this.inventories = data; // No need to initialize newQuantity and newLimit anymore\n      });\n    }\n    updateInventory(inventory) {\n      // Send the updated inventory\n      const updatedInventory = {\n        id: inventory.id,\n        skuCode: inventory.skuCode,\n        quantity: inventory.quantity,\n        // Use the quantity input directly\n        limit: inventory.limit // Use the limit input directly\n      };\n      this.inventoryService.updateInventory(updatedInventory).subscribe(() => {\n        this.loadInventories(); // Reload inventories after update\n        this.successMessage = 'Inventory updated successfully!';\n        // Clear the success message after 3 seconds\n        setTimeout(() => {\n          this.successMessage = '';\n        }, 3000);\n      });\n    }\n    static ɵfac = function InventoryComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || InventoryComponent)(i0.ɵɵdirectiveInject(i1.InventoryService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: InventoryComponent,\n      selectors: [[\"app-inventory\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 8,\n      vars: 3,\n      consts: [[1, \"container\", \"mx-auto\", \"p-8\", \"bg-gray-200\", \"min-h-screen\"], [1, \"bg-white\", \"p-6\", \"rounded-lg\", \"shadow-lg\", \"border\", \"border-gray-300\"], [1, \"text-4xl\", \"font-extrabold\", \"mb-6\", \"text-center\", \"text-gray-800\"], [\"class\", \"bg-green-100 border border-green-400 text-green-700 px-6 py-4 rounded-md relative mb-6 flex justify-between items-center\", \"role\", \"alert\", 4, \"ngIf\"], [1, \"overflow-x-auto\"], [\"class\", \"table-auto w-full bg-white border-collapse border border-gray-300 shadow-sm\", 4, \"ngIf\"], [\"class\", \"text-center text-gray-500 mt-8\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"bg-green-100\", \"border\", \"border-green-400\", \"text-green-700\", \"px-6\", \"py-4\", \"rounded-md\", \"relative\", \"mb-6\", \"flex\", \"justify-between\", \"items-center\"], [1, \"font-bold\"], [1, \"ml-2\"], [1, \"text-green-500\", \"hover:text-green-700\", \"focus:outline-none\", 3, \"click\"], [\"role\", \"button\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"viewBox\", \"0 0 20 20\", 1, \"fill-current\", \"h-6\", \"w-6\"], [\"d\", \"M14.348 5.652a1 1 0 00-1.414 0L10 8.586 7.066 5.652a1 1 0 00-1.414 1.414L8.586 10l-2.934 2.934a1 1 0 101.414 1.414L10 11.414l2.934 2.934a1 1 0 001.414-1.414L11.414 10l2.934-2.934a1 1 0 000-1.414z\"], [1, \"table-auto\", \"w-full\", \"bg-white\", \"border-collapse\", \"border\", \"border-gray-300\", \"shadow-sm\"], [1, \"bg-gray-50\"], [1, \"border-b\"], [1, \"px-6\", \"py-4\", \"text-left\", \"font-semibold\", \"text-gray-800\"], [\"class\", \"border-b hover:bg-gray-100 transition-colors\", 4, \"ngFor\", \"ngForOf\"], [1, \"border-b\", \"hover:bg-gray-100\", \"transition-colors\"], [1, \"px-6\", \"py-4\", \"text-gray-800\"], [1, \"px-6\", \"py-4\"], [\"type\", \"number\", \"placeholder\", \"Quantity\", 1, \"border\", \"border-gray-400\", \"rounded-md\", \"px-4\", \"py-2\", \"w-24\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-gray-500\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"number\", \"placeholder\", \"Limit\", 1, \"border\", \"border-gray-400\", \"rounded-md\", \"px-4\", \"py-2\", \"w-24\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-gray-500\", 3, \"ngModelChange\", \"ngModel\"], [1, \"px-6\", \"py-4\", \"flex\", \"items-center\", \"gap-4\"], [1, \"bg-gray-800\", \"text-white\", \"px-6\", \"py-2\", \"rounded-lg\", \"shadow-md\", \"hover:bg-gray-700\", \"hover:shadow-lg\", \"transition\", \"duration-200\", \"ease-in-out\", 3, \"click\"], [1, \"text-center\", \"text-gray-500\", \"mt-8\"]],\n      template: function InventoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Inventory Management\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, InventoryComponent_div_4_Template, 11, 1, \"div\", 3);\n          i0.ɵɵelementStart(5, \"div\", 4);\n          i0.ɵɵtemplate(6, InventoryComponent_table_6_Template, 12, 1, \"table\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(7, InventoryComponent_p_7_Template, 2, 0, \"p\", 6);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.inventories.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.inventories.length === 0);\n        }\n      },\n      dependencies: [FormsModule, i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.NgModel, CommonModule, i3.NgForOf, i3.NgIf]\n    });\n  }\n  return InventoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}