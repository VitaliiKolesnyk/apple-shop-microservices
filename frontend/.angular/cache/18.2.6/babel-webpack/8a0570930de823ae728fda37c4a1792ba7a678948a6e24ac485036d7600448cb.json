{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/web-socket.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction ChatRoomComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(message_r1);\n  }\n}\nexport let ChatRoomComponent = /*#__PURE__*/(() => {\n  class ChatRoomComponent {\n    webSocketService;\n    messages = [];\n    newMessage = '';\n    constructor(webSocketService) {\n      this.webSocketService = webSocketService;\n    }\n    ngOnInit() {\n      this.webSocketService.connect('your-session-id'); // Replace with actual session ID\n      this.webSocketService.onMessageReceived().subscribe(message => {\n        this.messages.push(message.content); // Adjust based on your message structure\n      });\n    }\n    sendMessage() {\n      if (this.newMessage.trim()) {\n        this.webSocketService.sendMessage('your-session-id', {\n          content: this.newMessage\n        });\n        this.newMessage = '';\n      }\n    }\n    ngOnDestroy() {\n      this.webSocketService.disconnect();\n    }\n    static ɵfac = function ChatRoomComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ChatRoomComponent)(i0.ɵɵdirectiveInject(i1.WebSocketService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatRoomComponent,\n      selectors: [[\"app-chat-room\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 2,\n      consts: [[1, \"chat-container\"], [1, \"messages\"], [4, \"ngFor\", \"ngForOf\"], [\"placeholder\", \"Type a message...\", 3, \"ngModelChange\", \"ngModel\"], [3, \"click\"]],\n      template: function ChatRoomComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n          i0.ɵɵtemplate(2, ChatRoomComponent_div_2_Template, 2, 1, \"div\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"input\", 3);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatRoomComponent_Template_input_ngModelChange_3_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.newMessage, $event) || (ctx.newMessage = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function ChatRoomComponent_Template_button_click_4_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(5, \"Send\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n          i0.ɵɵadvance();\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.newMessage);\n        }\n      },\n      dependencies: [FormsModule, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, CommonModule, i3.NgForOf]\n    });\n  }\n  return ChatRoomComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}