{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { CategoryService } from '../services/category.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction CategoryComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"div\", 13)(2, \"strong\", 14);\n    i0.ɵɵtext(3, \"Success:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 15);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.successMessage);\n  }\n}\nfunction CategoryComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"div\", 13)(2, \"strong\", 17);\n    i0.ɵɵtext(3, \"Error:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\", 18);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nfunction CategoryComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Category name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Category name must be at least 3 characters long.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CategoryComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, CategoryComponent_div_10_div_1_Template, 2, 0, \"div\", 20)(2, CategoryComponent_div_10_div_2_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.name == null ? null : ctx_r0.name.errors == null ? null : ctx_r0.name.errors[\"minlength\"]);\n  }\n}\nfunction CategoryComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Please select a file.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let CategoryComponent = /*#__PURE__*/(() => {\n  class CategoryComponent {\n    fb;\n    addCategoryForm;\n    categoryService = inject(CategoryService);\n    successMessage = '';\n    errorMessage = '';\n    selectedFile = null;\n    constructor(fb) {\n      this.fb = fb;\n      this.addCategoryForm = this.fb.group({\n        name: ['', [Validators.required, Validators.minLength(3)]]\n      });\n    }\n    onSubmit() {\n      if (this.addCategoryForm.valid) {\n        const formData = new FormData();\n        formData.append('name', this.addCategoryForm.get('name')?.value);\n        // Append the file to FormData if it's selected\n        if (this.selectedFile) {\n          formData.append('thumbnail', this.selectedFile, this.selectedFile.name);\n        }\n        this.categoryService.addCategory(formData).subscribe({\n          next: () => {\n            this.successMessage = 'Category created successfully!';\n            this.errorMessage = '';\n            this.addCategoryForm.reset();\n            this.selectedFile = null; // Reset selected file\n          },\n          error: error => {\n            this.errorMessage = 'Category creation failed: ' + error.message;\n            console.error('Category creation failed', error);\n          }\n        });\n      }\n    }\n    get name() {\n      return this.addCategoryForm.get('name');\n    }\n    onFileSelected(event) {\n      const input = event.target;\n      if (input.files && input.files.length > 0) {\n        this.selectedFile = input.files[0];\n      }\n    }\n    static ɵfac = function CategoryComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || CategoryComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CategoryComponent,\n      selectors: [[\"app-add-category\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 6,\n      consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-2xl\", \"font-bold\", \"mb-4\", \"text-center\", \"text-dark\"], [\"class\", \"alert alert-success alert-dismissible fade show\", 4, \"ngIf\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", 4, \"ngIf\"], [1, \"bg-white\", \"shadow-md\", \"rounded-lg\", \"p-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"mb-4\"], [\"for\", \"name\", 1, \"block\", \"text-gray-700\"], [\"type\", \"text\", \"id\", \"name\", \"formControlName\", \"name\", 1, \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\"], [\"class\", \"text-red-500\", 4, \"ngIf\"], [\"for\", \"thumbnail\", 1, \"block\", \"text-gray-700\"], [\"type\", \"file\", \"id\", \"thumbnail\", 1, \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", 3, \"change\"], [\"type\", \"submit\", 1, \"bg-black\", \"text-white\", \"px-4\", \"py-2\", \"rounded-lg\", \"hover:bg-gray-800\", 3, \"disabled\"], [1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"flex\", \"items-center\"], [1, \"ml-2\", \"text-green-600\"], [1, \"ml-2\", \"text-green-800\"], [1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [1, \"ml-2\", \"text-red-600\"], [1, \"ml-2\", \"text-red-800\"], [1, \"text-red-500\"], [4, \"ngIf\"]],\n      template: function CategoryComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Add Category\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, CategoryComponent_div_3_Template, 6, 1, \"div\", 2)(4, CategoryComponent_div_4_Template, 6, 1, \"div\", 3);\n          i0.ɵɵelementStart(5, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function CategoryComponent_Template_form_ngSubmit_5_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"Category Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"input\", 7);\n          i0.ɵɵtemplate(10, CategoryComponent_div_10_Template, 3, 2, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 9);\n          i0.ɵɵtext(13, \"Thumbnail\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"input\", 10);\n          i0.ɵɵlistener(\"change\", function CategoryComponent_Template_input_change_14_listener($event) {\n            return ctx.onFileSelected($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, CategoryComponent_div_15_Template, 2, 0, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"button\", 11);\n          i0.ɵɵtext(17, \" Add Category \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.addCategoryForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", !ctx.selectedFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.addCategoryForm.invalid);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, CommonModule, i2.NgIf],\n      styles: [\"body[_ngcontent-%COMP%]{background-color:#f8f9fa;font-family:Arial,sans-serif}h2[_ngcontent-%COMP%]{color:#333}.alert[_ngcontent-%COMP%]{border:1px solid #ced4da}.alert-success[_ngcontent-%COMP%]{background-color:#e6ffed;border-color:#c3e6cb}.alert-danger[_ngcontent-%COMP%]{background-color:#f8d7da;border-color:#f5c6cb}input[type=text][_ngcontent-%COMP%], input[type=file][_ngcontent-%COMP%]{border:1px solid #ced4da}input[type=text][_ngcontent-%COMP%]:focus, input[type=file][_ngcontent-%COMP%]:focus{border-color:#495057;outline:none}button[_ngcontent-%COMP%]{background-color:#28a745}button[_ngcontent-%COMP%]:hover{background-color:#218838}\"]\n    });\n  }\n  return CategoryComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}