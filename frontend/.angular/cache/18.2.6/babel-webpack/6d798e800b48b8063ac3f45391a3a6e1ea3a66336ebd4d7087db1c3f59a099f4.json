{"ast":null,"code":"import * as Stomp from 'stompjs';\nimport SockJS from 'sockjs-client/dist/sockjs';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let WebSocketService = /*#__PURE__*/(() => {\n  class WebSocketService {\n    stompClient;\n    messageSubject = new Subject();\n    connect(sessionId) {\n      const socket = new SockJS('http://localhost:9000/chat-websocket');\n      this.stompClient = Stomp.over(socket);\n      this.stompClient.connect({}, frame => {\n        console.log('Connected: ' + frame);\n        this.stompClient.subscribe(`/topic/${sessionId}`, messageOutput => {\n          this.messageSubject.next(JSON.parse(messageOutput.body));\n        });\n      });\n    }\n    sendMessage(sessionId, message) {\n      this.stompClient.send(`/app/chat.sendMessage/${sessionId}`, {}, JSON.stringify(message));\n    }\n    onMessageReceived() {\n      return this.messageSubject.asObservable();\n    }\n    disconnect() {\n      if (this.stompClient !== null) {\n        this.stompClient.disconnect();\n      }\n      console.log('Disconnected');\n    }\n    static ɵfac = function WebSocketService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || WebSocketService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WebSocketService,\n      factory: WebSocketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return WebSocketService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}