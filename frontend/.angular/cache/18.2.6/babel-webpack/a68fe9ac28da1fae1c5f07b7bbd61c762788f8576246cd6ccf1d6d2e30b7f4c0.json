{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"angular-auth-oidc-client\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"success\": a0,\n  \"error\": a1\n});\nfunction UserInfoComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.isSuccess, !ctx_r1.isSuccess));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.message, \" \");\n  }\n}\nfunction UserInfoComponent_form_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function UserInfoComponent_form_2_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.updateUser());\n    });\n    i0.ɵɵelementStart(1, \"h3\");\n    i0.ɵɵtext(2, \"Update Personal Information\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 5)(4, \"label\", 12);\n    i0.ɵɵtext(5, \"Username:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"input\", 13);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_form_2_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.user.username, $event) || (ctx_r1.user.username = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 14);\n    i0.ɵɵtext(9, \"First Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"input\", 15);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_form_2_Template_input_ngModelChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.user.firstName, $event) || (ctx_r1.user.firstName = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 16);\n    i0.ɵɵtext(13, \"Last Name:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_form_2_Template_input_ngModelChange_14_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.user.lastName, $event) || (ctx_r1.user.lastName = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"div\", 5)(16, \"label\", 18);\n    i0.ɵɵtext(17, \"Email:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"input\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_form_2_Template_input_ngModelChange_18_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.user.email, $event) || (ctx_r1.user.email = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"button\", 10);\n    i0.ɵɵtext(20, \"Update\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.user.username);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.user.firstName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.user.lastName);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.user.email);\n  }\n}\nfunction UserInfoComponent_ng_template_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Loading user information...\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let UserInfoComponent = /*#__PURE__*/(() => {\n  class UserInfoComponent {\n    route;\n    userService;\n    oidcSecurityService;\n    user; // Replace with your actual user type\n    message = null;\n    isSuccess = false;\n    password = ''; // For password input\n    confirmPassword = ''; // For confirm password input\n    constructor(route, userService, oidcSecurityService) {\n      this.route = route;\n      this.userService = userService;\n      this.oidcSecurityService = oidcSecurityService;\n    }\n    ngOnInit() {\n      this.fetchUserDetails();\n    }\n    fetchUserDetails() {\n      this.userService.getUser().subscribe(user => {\n        this.user = user;\n        console.log('Fetched user info:', this.user);\n      }, error => {\n        console.error('Error fetching user info:', error);\n      });\n    }\n    updateUser() {\n      if (this.user) {\n        this.userService.updateUser(this.user).subscribe(response => {\n          this.showMessage('Personal information updated successfully');\n          console.log('User updated successfully', response);\n          this.isSuccess = true;\n        }, error => {\n          this.showMessage('Error updating user.');\n          console.error('Error updating user', error);\n        });\n      }\n    }\n    showMessage(msg) {\n      this.message = msg;\n      setTimeout(() => {\n        this.message = null;\n      }, 5000); // Hide message after 5 seconds\n    }\n    updatePassword() {\n      if (this.password !== this.confirmPassword) {\n        this.showMessage('Passwords do not match');\n        return;\n      }\n      // Prepare the UpdatePasswordDto\n      const updatePasswordDto = {\n        value: this.password\n      };\n      this.oidcSecurityService.getAccessToken().subscribe(token => {\n        const userId = this.decodeToken(token);\n        if (userId) {\n          this.userService.updatePassword(userId, updatePasswordDto).subscribe(response => {\n            this.showMessage('Password updated successfully');\n            console.log('Password updated successfully', response);\n            this.isSuccess = true;\n          }, error => {\n            this.showMessage('Error updating password');\n            console.error('Error updating password', error);\n          });\n        }\n      }, error => {\n        console.error('Failed to get access token:', error);\n      });\n    }\n    // Decode JWT token method\n    decodeToken(token) {\n      try {\n        const base64Url = token.split('.')[1];\n        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n        const jsonPayload = decodeURIComponent(atob(base64).split('').map(c => '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)).join(''));\n        const decoded = JSON.parse(jsonPayload);\n        return decoded.sub || decoded.userId || null; // Adjust according to your JWT structure\n      } catch (error) {\n        console.error('Failed to decode token:', error);\n        return null;\n      }\n    }\n    static ɵfac = function UserInfoComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || UserInfoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.OidcSecurityService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UserInfoComponent,\n      selectors: [[\"app-user-info\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 18,\n      vars: 5,\n      consts: [[\"loading\", \"\"], [1, \"user-info-container\"], [\"class\", \"alert\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\", \"ngIfElse\"], [3, \"ngSubmit\"], [1, \"user-detail\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"confirmPassword\"], [\"id\", \"confirmPassword\", \"type\", \"password\", \"name\", \"confirmPassword\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"update-button\"], [1, \"alert\", 3, \"ngClass\"], [\"for\", \"username\"], [\"id\", \"username\", \"type\", \"text\", \"name\", \"username\", \"required\", \"\", \"readonly\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"firstName\"], [\"id\", \"firstName\", \"type\", \"text\", \"name\", \"firstName\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"lastName\"], [\"id\", \"lastName\", \"type\", \"text\", \"name\", \"lastName\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"name\", \"email\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"]],\n      template: function UserInfoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1);\n          i0.ɵɵtemplate(1, UserInfoComponent_div_1_Template, 2, 5, \"div\", 2)(2, UserInfoComponent_form_2_Template, 21, 4, \"form\", 3);\n          i0.ɵɵelementStart(3, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function UserInfoComponent_Template_form_ngSubmit_3_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.updatePassword());\n          });\n          i0.ɵɵelementStart(4, \"h3\");\n          i0.ɵɵtext(5, \"Change Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n          i0.ɵɵtext(8, \"New Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_Template_input_ngModelChange_9_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 5)(11, \"label\", 8);\n          i0.ɵɵtext(12, \"Confirm Password:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"input\", 9);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UserInfoComponent_Template_input_ngModelChange_13_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            i0.ɵɵtwoWayBindingSet(ctx.confirmPassword, $event) || (ctx.confirmPassword = $event);\n            return i0.ɵɵresetView($event);\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(14, \"button\", 10);\n          i0.ɵɵtext(15, \"Update Password\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(16, UserInfoComponent_ng_template_16_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const loading_r4 = i0.ɵɵreference(17);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.message);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.user)(\"ngIfElse\", loading_r4);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.confirmPassword);\n        }\n      },\n      dependencies: [CommonModule, i4.NgClass, i4.NgIf, ReactiveFormsModule, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, FormsModule, i5.NgModel, i5.NgForm, RouterModule],\n      styles: [\"body[_ngcontent-%COMP%]{background-color:#fff;color:#000;font-family:Arial,sans-serif;margin:0}.user-info-container[_ngcontent-%COMP%]{padding:30px;border:1px solid #000;border-radius:8px;background-color:#f2f2f2;max-width:600px;margin:20px auto}.alert[_ngcontent-%COMP%]{margin-bottom:20px;padding:15px;border-radius:5px;font-weight:700;animation:_ngcontent-%COMP%_slideIn .5s ease-in-out}.success[_ngcontent-%COMP%]{color:#fff;background-color:#28a745;border:1px solid #28a745}.error[_ngcontent-%COMP%]{color:#fff;background-color:#dc3545;border:1px solid #dc3545}.user-detail[_ngcontent-%COMP%]{margin-bottom:20px}.user-detail[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;margin-bottom:5px;color:#000}input[_ngcontent-%COMP%]{width:100%;padding:10px;border:1px solid #000;border-radius:4px;background-color:#fff;color:#000}input[_ngcontent-%COMP%]:focus{border-color:#000;outline:none}.update-button[_ngcontent-%COMP%]{background-color:#fff;color:#000;padding:12px 20px;border:2px solid #000;border-radius:5px;cursor:pointer;transition:background-color .3s,transform .3s}.update-button[_ngcontent-%COMP%]:hover{background-color:#000;color:#fff;transform:translateY(-2px)}@keyframes _ngcontent-%COMP%_slideIn{0%{transform:translateY(-20px);opacity:0}to{transform:translateY(0);opacity:1}}\"]\n    });\n  }\n  return UserInfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}