spring.application.name=order-service
server.port=8081

spring.datasource.url=jdbc:postgresql://postgres:5432/orders
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=create

inventory.url=http://localhost:8082

springdoc.api-docs.path=/api-docs

#Kafka properties
#Consumer
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=order-service-group
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Producer
spring.kafka.producer.retries=10
#interval between retries
spring.kafka.retry.topic.delay=1s
#Acks configuration - "all" ensures the producer waits for all replicas to acknowledge
spring.kafka.producer.acks=all
#maximum time producer will wait for entire send operation to complete (send, wait for ack, retries)
spring.kafka.producer.properties.delivery.timeout.ms=120000
#time producer will wait before sending event
spring.kafka.producer.properties.linger.ms=0
#maximum time producer will wait after sending single request
spring.kafka.producer.properties.request.timeout.ms=30000
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

#Actuator
management.endpoints.web.exposure.include=health, info, metrics, prometheus, circuitbreakers
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=order-service
management.endpoints.web.base-path=/order-service
management.tracing.sampling.probability=1.0

#Resilinece4j Properties
resilience4j.circuitbreaker.configs.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.configs.inventory.slidingWindowSize=10
resilience4j.circuitbreaker.configs.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.configs.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.inventory.minimum-number-of-calls=5

#Redis
spring.data.redis.host=redis
spring.data.redis.port=6379

